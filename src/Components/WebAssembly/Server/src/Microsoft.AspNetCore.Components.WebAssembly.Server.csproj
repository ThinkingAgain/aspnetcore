<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <TargetFramework>$(DefaultNetCoreTargetFramework)</TargetFramework>
    <Description>Runtime server features for ASP.NET Core Blazor applications.</Description>
    <IsShippingPackage>true</IsShippingPackage>
    <HasReferenceAssembly>false</HasReferenceAssembly>
    <!-- This is so that we add the FrameworkReference to Microsoft.AspNetCore.App -->
    <UseLatestAspNetCoreReference>true</UseLatestAspNetCoreReference>

    <!-- We're deliberately bundling assemblies as content files. Suppress the warning. -->
    <NoWarn>$(NoWarn);NU5100</NoWarn>
  </PropertyGroup>

  <ItemGroup>
    <Compile Include="$(ComponentsSharedSourceRoot)\src\CacheHeaderSettings.cs" Link="Shared\CacheHeaderSettings.cs" />
    <Compile Include="$(SharedSourceRoot)\CommandLineUtils\Utilities\DotNetMuxer.cs" Link="Shared\DotNetMuxer.cs" />

    <!-- Ensure debug proxy is built first, but don't create an actual reference, since we don't want its transitive dependencies. -->
    <ProjectReference
      Include="..\..\DebugProxy\src\Microsoft.AspNetCore.Components.WebAssembly.DebugProxy.csproj"
      ReferenceOutputAssembly="false" />
  </ItemGroup>

  <!-- Emit debug proxy binaries to output directory. This lets us launch it as a separate process while keeping the build output self-contained.  -->
  <Target Name="IncludeDebugProxyBinariesAsContent" BeforeTargets="GetCopyToOutputDirectoryItems">
    <ItemGroup>
      <DebugProxyBinaries Include="..\..\DebugProxy\src\bin\$(Configuration)\$(DefaultNetCoreTargetFramework)\**" />
      <ContentWithTargetPath Include="@(DebugProxyBinaries)"
        TargetPath="BlazorDebugProxy\%(RecursiveDir)%(FileName)%(Extension)"
        CopyToOutputDirectory="PreserveNewest" />

      <!-- Also include in package output -->
      <Content Include="@(DebugProxyBinaries)"
               Pack="true"
               PackagePath="contentFiles\any\$(DefaultNetCoreTargetFramework)\BlazorDebugProxy\%(RecursiveDir)%(FileName)%(Extension)"
               PackageCopyToOutput="true" />
    </ItemGroup>
  </Target>

</Project>
